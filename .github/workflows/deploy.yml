name: Deploy to Azure Functions

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  AZURE_FUNCTIONAPP_NAME: file-validation-function-app
  AZURE_FUNCTIONAPP_PACKAGE_PATH: '.'
  JAVA_VERSION: '11'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'
        cache: 'maven'

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build with Maven
      run: mvn clean package -DskipTests

    - name: Run tests
      run: mvn test

    - name: Generate test coverage report
      run: mvn jacoco:report

    - name: Upload test coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./target/site/jacoco/jacoco.xml
        flags: unittests
        name: codecov-umbrella

    - name: Deploy to Azure Functions
      uses: Azure/functions-action@v1
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: './target/file-validation-service-1.0.0.jar'
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}

    - name: Test deployment
      run: |
        # Wait for deployment to complete
        sleep 30
        
        # Test health endpoint
        curl -f https://${{ env.AZURE_FUNCTIONAPP_NAME }}.azurewebsites.net/api/health || exit 1
        
        echo "Deployment test completed successfully"

  security-scan:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Java
      uses: actions/setup-java@v3
      with:
        java-version: ${{ env.JAVA_VERSION }}
        distribution: 'temurin'

    - name: Run OWASP dependency check
      run: |
        mvn org.owasp:dependency-check-maven:check
        mvn org.owasp:dependency-check-maven:aggregate

    - name: Upload security scan results
      uses: actions/upload-artifact@v3
      with:
        name: security-scan-results
        path: target/dependency-check-report.html

  performance-test:
    runs-on: ubuntu-latest
    needs: build-and-deploy
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - name: Install Artillery
      run: npm install -g artillery

    - name: Run performance tests
      run: |
        # Create a simple test file
        echo '{"test": "data"}' > test-data.json
        
        # Run performance test against health endpoint
        artillery quick --count 10 --num 5 https://${{ env.AZURE_FUNCTIONAPP_NAME }}.azurewebsites.net/api/health

    - name: Upload performance test results
      uses: actions/upload-artifact@v3
      with:
        name: performance-test-results
        path: artillery-report.json

  notify:
    runs-on: ubuntu-latest
    needs: [build-and-deploy, security-scan, performance-test]
    if: always()
    
    steps:
    - name: Notify on success
      if: success()
      run: |
        echo "‚úÖ Deployment completed successfully!"
        echo "üåê Function App URL: https://${{ env.AZURE_FUNCTIONAPP_NAME }}.azurewebsites.net"
        echo "üìä Health Check: https://${{ env.AZURE_FUNCTIONAPP_NAME }}.azurewebsites.net/api/health"

    - name: Notify on failure
      if: failure()
      run: |
        echo "‚ùå Deployment failed!"
        echo "Please check the logs for more details." 